<Activity mc:Ignorable="sap sap2010 sads" x:Class="wbTemplate" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
<x:Members>
<x:Property Name="in_wbParentPath" Type="InArgument(x:String)"/>
<x:Property Name="MyArg1" Type="InArgument(x:String)"/></x:Members>
<mva:VisualBasic.Settings>
<x:Null/>
</mva:VisualBasic.Settings>
<sap2010:WorkflowViewState.IdRef>wbTemplate_1</sap2010:WorkflowViewState.IdRef>
<TextExpression.NamespacesForImplementation>
<sco:Collection x:TypeArguments="x:String">
<x:String>System.Activities</x:String>
<x:String>System.Activities.Statements</x:String>
<x:String>System.Activities.Expressions</x:String>
<x:String>System.Activities.Validation</x:String>
<x:String>System.Activities.XamlIntegration</x:String>
<x:String>Microsoft.VisualBasic</x:String>
<x:String>Microsoft.VisualBasic.Activities</x:String>
<x:String>System</x:String>
<x:String>System.Collections</x:String>
<x:String>System.Collections.Generic</x:String>
<x:String>System.Data</x:String>
<x:String>System.Diagnostics</x:String>
<x:String>System.Drawing</x:String>
<x:String>System.IO</x:String>
<x:String>System.Linq</x:String>
<x:String>System.Net.Mail</x:String>
<x:String>System.Xml</x:String>
<x:String>System.Xml.Linq</x:String>
<x:String>UiPath.Core</x:String>
<x:String>UiPath.Core.Activities</x:String>
<x:String>System.Windows.Markup</x:String>
<x:String>Microsoft.VisualBasic.CompilerServices</x:String>
</sco:Collection>
</TextExpression.NamespacesForImplementation>
<TextExpression.ReferencesForImplementation>
<sco:Collection x:TypeArguments="AssemblyReference">
<AssemblyReference>System.Activities</AssemblyReference>
<AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
<AssemblyReference>mscorlib</AssemblyReference>
<AssemblyReference>System.Data</AssemblyReference>
<AssemblyReference>System</AssemblyReference>
<AssemblyReference>System.Drawing</AssemblyReference>
<AssemblyReference>System.Core</AssemblyReference>
<AssemblyReference>System.Xml</AssemblyReference>
<AssemblyReference>System.Xml.Linq</AssemblyReference>
<AssemblyReference>UiPath.Core</AssemblyReference>
<AssemblyReference>UiPath.Core.Activities</AssemblyReference>
<AssemblyReference>PresentationFramework</AssemblyReference>
<AssemblyReference>WindowsBase</AssemblyReference>
<AssemblyReference>PresentationCore</AssemblyReference>
<AssemblyReference>System.Xaml</AssemblyReference>
<AssemblyReference>System.ServiceModel</AssemblyReference>
<AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
<AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
<AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
</sco:Collection>
</TextExpression.ReferencesForImplementation>
<TryCatch DisplayName="workblock" sap2010:Annotation.AnnotationText="#Process Logic Layer#
Description: 

Pre Condition: 
Post Condtion: 

##############
Deployment instructions: 
Add the workblock snippet folder to your Studio library for easy insertion of new workblock.

After inserting:
This workblock template should be used in a standalone workflow. You just need to create the workblock interface as workflow arguments.

 + in_wbParentPath &lt;String&gt; : the parent wb's path.  If It is the first workblock you are adding to the project, leave it empty. Otherwise, pass it's parent path.

##############" sap2010:WorkflowViewState.IdRef="TryCatch_1">
<TryCatch.Variables>
<Variable Name="wbPath" x:TypeArguments="x:String"/>
<Variable Name="wbName" x:TypeArguments="x:String"/>
<Variable Name="wbStartTime" x:TypeArguments="s:DateTime"/>
</TryCatch.Variables>
<TryCatch.Try>
<Sequence DisplayName="Try processing wb" sap2010:WorkflowViewState.IdRef="Sequence_3">
<Sequence DisplayName="wbStartup" sap2010:Annotation.AnnotationText="During block startup, information about the path are constructed. It will be passed to any child workblock.
You should also publish the input arguments that you want to make available in the log" sap2010:WorkflowViewState.IdRef="Sequence_23">
<Assign DisplayName="Assign workblock its name" sap2010:Annotation.AnnotationText="Edit to assign a name of your choosing" sap2010:WorkflowViewState.IdRef="Assign_9">
<Assign.To>
<OutArgument x:TypeArguments="x:String">[wbName]</OutArgument>
</Assign.To>
<Assign.Value>
<InArgument x:TypeArguments="x:String">workblock template</InArgument>
</Assign.Value>
</Assign>
<Assign DisplayName="Create workblock path" sap2010:Annotation.AnnotationText="Create current workblock path. This will be passed to children wb, if any" sap2010:WorkflowViewState.IdRef="Assign_10">
<Assign.To>
<OutArgument x:TypeArguments="x:String">[wbPath]</OutArgument>
</Assign.To>
<Assign.Value>
<InArgument x:TypeArguments="x:String">[if (string.IsNullOrEmpty(in_wbParentPath), wbName, in_wbParentPath+"|"+wbName)]</InArgument>
</Assign.Value>
</Assign>
<Assign DisplayName="Assign start time" sap2010:Annotation.AnnotationText="Assign template start time. " sap2010:WorkflowViewState.IdRef="Assign_11">
<Assign.To>
<OutArgument x:TypeArguments="s:DateTime">[wbStartTime]</OutArgument>
</Assign.To>
<Assign.Value>
<InArgument x:TypeArguments="s:DateTime">[datetime.Now]</InArgument>
</Assign.Value>
</Assign>
<ui:AddLogFields DisplayName="Publish default wb fields" sap2010:Annotation.AnnotationText="Default wb fields
wbName
wbParentName
wbKey
wbPath
wbLevel
wbStartTime
wbState" sap2010:WorkflowViewState.IdRef="AddLogFields_1">
<ui:AddLogFields.Fields>
<InArgument x:Key="wbName" x:TypeArguments="x:String">[wbName]</InArgument>
<InArgument x:Key="wbParentName" x:TypeArguments="x:String">[if(wbPath.Count(Function(x) x="|") = 0, string.Empty, wbPath.Split("|".ToCharArray)(wbPath.Count(Function(x) x="|")-1))]</InArgument>
<InArgument x:Key="wbKey" x:TypeArguments="x:String">[Guid.NewGuid.ToString]</InArgument>
<InArgument x:Key="wbPath" x:TypeArguments="x:String">[wbPath]</InArgument>
<InArgument x:Key="wbLevel" x:TypeArguments="x:Int32">[wbPath.Count(Function(x) x="|")]</InArgument>
<InArgument x:Key="wbState" x:TypeArguments="x:String">Executing</InArgument>
<InArgument x:Key="wbStartTime" x:TypeArguments="x:String">[wbStartTime.ToString("yyyyMMdd HH:mm:ss.fff")]</InArgument>
</ui:AddLogFields.Fields>
</ui:AddLogFields>
<ui:AddLogFields DisplayName="Add log fields" sap2010:Annotation.AnnotationText="Publish input fields" sap2010:WorkflowViewState.IdRef="AddLogFields_2">
<ui:AddLogFields.Fields>
<scg:Dictionary x:TypeArguments="x:String, InArgument"/>
</ui:AddLogFields.Fields>
</ui:AddLogFields>
<ui:LogMessage DisplayName="Log execution ended message" Level="Info" Message='[wbPath + " execution started."]' sap2010:WorkflowViewState.IdRef="LogMessage_1"/>
</Sequence>
<Sequence DisplayName="Process" sap2010:Annotation.AnnotationText="#Write business code here#" sap2010:WorkflowViewState.IdRef="Sequence_1"/>
<Sequence DisplayName="wb Logging Successful" sap2010:Annotation.AnnotationText="Successful logging for workblock. 
You should also publish the output arguments that you want to make available in the log." sap2010:WorkflowViewState.IdRef="Sequence_24">
<ui:AddLogFields DisplayName="Publish default wb fields" sap2010:Annotation.AnnotationText="Default wb fields
wbStatus
wbState
wbDurationSec" sap2010:WorkflowViewState.IdRef="AddLogFields_3">
<ui:AddLogFields.Fields>
<InArgument x:Key="wbStatus" x:TypeArguments="x:String">Successful</InArgument>
<InArgument x:Key="wbState" x:TypeArguments="x:String">Ended</InArgument>
<InArgument x:Key="wbDurationSec" x:TypeArguments="x:Double">[convert.ToDouble(now.Subtract(wbStartTime).TotalSeconds)]</InArgument>
</ui:AddLogFields.Fields>
</ui:AddLogFields>
<ui:AddLogFields DisplayName="Add log fields" sap2010:Annotation.AnnotationText="Publish output fields" sap2010:WorkflowViewState.IdRef="AddLogFields_4">
<ui:AddLogFields.Fields>
<scg:Dictionary x:TypeArguments="x:String, InArgument"/>
</ui:AddLogFields.Fields>
</ui:AddLogFields>
<ui:LogMessage DisplayName="Log execution ended message" Level="Info" Message='[wbPath + " execution ended with success."]' sap2010:WorkflowViewState.IdRef="LogMessage_2"/>
</Sequence>
</Sequence>
</TryCatch.Try>
<TryCatch.Catches>
<Catch sap2010:WorkflowViewState.IdRef="Catch`1_1" x:TypeArguments="s:Exception">
<ActivityAction x:TypeArguments="s:Exception">
<ActivityAction.Argument>
<DelegateInArgument Name="exception" x:TypeArguments="s:Exception"/>
</ActivityAction.Argument>
<Sequence DisplayName="Catch, log and rethrow" sap2010:WorkflowViewState.IdRef="Sequence_26">
<Sequence DisplayName="wb Logging Failed" sap2010:Annotation.AnnotationText="Failed logging for workblock. 
You should only set transaction status if you use a QueueItem, otherwise failed logging should remain unchanged." sap2010:WorkflowViewState.IdRef="Sequence_25">
<ui:AddLogFields DisplayName="Publish default wb fields" sap2010:Annotation.AnnotationText="Default wb fields
wbStatus
wbState
wbDurationSec
wbExceptionType
wbExceptionMessage" sap2010:WorkflowViewState.IdRef="AddLogFields_5">
<ui:AddLogFields.Fields>
<InArgument x:Key="wbStatus" x:TypeArguments="x:String">Failed</InArgument>
<InArgument x:Key="wbState" x:TypeArguments="x:String">Ended</InArgument>
<InArgument x:Key="wbDurationSec" x:TypeArguments="x:Double">[convert.ToDouble(now.Subtract(wbStartTime).TotalSeconds)]</InArgument>
<InArgument x:Key="wbExceptionType" x:TypeArguments="x:String">[exception.GetType.Name]</InArgument>
<InArgument x:Key="wbExceptionMessage" x:TypeArguments="x:String">[exception.Message]</InArgument>
</ui:AddLogFields.Fields>
</ui:AddLogFields>
<If Condition='[if (exception isNot Nothing ANDALSO exception.GetType.Name = "BusinessRuleException", true, false)]' DisplayName="If AppEx Or BRE" sap2010:WorkflowViewState.IdRef="If_1"/>
<ui:LogMessage DisplayName="Log execution started message" Level="Error" Message='[wbPath + " execution ended with exception message: "+exception.Message]' sap2010:WorkflowViewState.IdRef="LogMessage_3"/>
</Sequence>
<Rethrow sap2010:WorkflowViewState.IdRef="Rethrow_1"/>
</Sequence>
</ActivityAction>
</Catch>
</TryCatch.Catches>
<sads:DebugSymbol.Symbol>d3tDOlxVc2Vyc1xtaWhhaS5kdW5hcmVhbnVcRG9jdW1lbnRzXFVpUGF0aFxVaVBhdGggRW5jaGFuY2VkIFJFRnJhbWV3b3JrXFVpUGF0aF9SRUZyYW1ld29ya1xXb3JrYmxvY2sgU25pcHBldFx3YlRlbXBsYXRlLnhhbWwtRQOkAQ4CAQFMB4gBEgIBFZABC58BFgIBAk0JdxQCASB4CXiXAQIBH3kJhwEUAgEWkQENnQEYAgEEngENngFEAgEDTgtVFAIBPFYLXRQCATReC2UUAgEwZgtwHQIBJXELdR0CASR2C3a3AQIBIXoLgAEdAgEbgQELhQEdAgEahgELhgHCAQIBF5IBD5oBIQIBDZsBD5sB1QECAQmcAQ+cAeYBAgEFUzZTSAIBP1A3UD8CAT1bNluGAQIBN1g3WD8CATVjOGNGAgEzYDlgRgIBMWpEalsCAS9pS2nEAQIBLm5KbnkCASxoRWhNAgEqa0VrTQIBKG1GbU8CASdsRWxmAgEmdogBdrQBAgEifEd8UQIBHn1GfUsCAR1+TH6GAQIBHIYBiAGGAb8BAgEYlAFLlAFRAgEUlQFKlQFPAgETmAFVmAFoAgERlgFQlgGKAQIBEJcBUpcBagIBDpsBHZsBjQECAQqcAY8BnAHjAQIBBg==</sads:DebugSymbol.Symbol>
</TryCatch>
<sap2010:WorkflowViewState.ViewStateManager>
<sap2010:ViewStateManager>
<sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="314,102">
<sap:WorkflowViewStateService.ViewState>
<scg:Dictionary x:TypeArguments="x:String, x:Object">
<x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
</scg:Dictionary>
</sap:WorkflowViewStateService.ViewState>
</sap2010:ViewStateData>
<sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="314,102">
<sap:WorkflowViewStateService.ViewState>
<scg:Dictionary x:TypeArguments="x:String, x:Object">
<x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
</scg:Dictionary>
</sap:WorkflowViewStateService.ViewState>
</sap2010:ViewStateData>
<sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="314,87">
<sap:WorkflowViewStateService.ViewState>
<scg:Dictionary x:TypeArguments="x:String, x:Object">
<x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
</scg:Dictionary>
</sap:WorkflowViewStateService.ViewState>
</sap2010:ViewStateData>
<sap2010:ViewStateData Id="AddLogFields_1" sap:VirtualizedContainerService.HintSize="314,154">
<sap:WorkflowViewStateService.ViewState>
<scg:Dictionary x:TypeArguments="x:String, x:Object">
<x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
</scg:Dictionary>
</sap:WorkflowViewStateService.ViewState>
</sap2010:ViewStateData>
<sap2010:ViewStateData Id="AddLogFields_2" sap:VirtualizedContainerService.HintSize="314,49">
<sap:WorkflowViewStateService.ViewState>
<scg:Dictionary x:TypeArguments="x:String, x:Object">
<x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
</scg:Dictionary>
</sap:WorkflowViewStateService.ViewState>
</sap2010:ViewStateData>
<sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="314,91"/>
<sap2010:ViewStateData Id="Sequence_23" sap:VirtualizedContainerService.HintSize="336,981">
<sap:WorkflowViewStateService.ViewState>
<scg:Dictionary x:TypeArguments="x:String, x:Object">
<x:Boolean x:Key="IsExpanded">True</x:Boolean>
<x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
<x:Boolean x:Key="IsPinned">False</x:Boolean>
</scg:Dictionary>
</sap:WorkflowViewStateService.ViewState>
</sap2010:ViewStateData>
<sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="336,126">
<sap:WorkflowViewStateService.ViewState>
<scg:Dictionary x:TypeArguments="x:String, x:Object">
<x:Boolean x:Key="IsExpanded">True</x:Boolean>
<x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
</scg:Dictionary>
</sap:WorkflowViewStateService.ViewState>
</sap2010:ViewStateData>
<sap2010:ViewStateData Id="AddLogFields_3" sap:VirtualizedContainerService.HintSize="314,94">
<sap:WorkflowViewStateService.ViewState>
<scg:Dictionary x:TypeArguments="x:String, x:Object">
<x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
</scg:Dictionary>
</sap:WorkflowViewStateService.ViewState>
</sap2010:ViewStateData>
<sap2010:ViewStateData Id="AddLogFields_4" sap:VirtualizedContainerService.HintSize="314,49">
<sap:WorkflowViewStateService.ViewState>
<scg:Dictionary x:TypeArguments="x:String, x:Object">
<x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
</scg:Dictionary>
</sap:WorkflowViewStateService.ViewState>
</sap2010:ViewStateData>
<sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="314,91"/>
<sap2010:ViewStateData Id="Sequence_24" sap:VirtualizedContainerService.HintSize="336,153">
<sap:WorkflowViewStateService.ViewState>
<scg:Dictionary x:TypeArguments="x:String, x:Object">
<x:Boolean x:Key="IsExpanded">False</x:Boolean>
<x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
<x:Boolean x:Key="IsPinned">False</x:Boolean>
</scg:Dictionary>
</sap:WorkflowViewStateService.ViewState>
</sap2010:ViewStateData>
<sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="358,1464">
<sap:WorkflowViewStateService.ViewState>
<scg:Dictionary x:TypeArguments="x:String, x:Object">
<x:Boolean x:Key="IsExpanded">True</x:Boolean>
<x:Boolean x:Key="IsPinned">False</x:Boolean>
</scg:Dictionary>
</sap:WorkflowViewStateService.ViewState>
</sap2010:ViewStateData>
<sap2010:ViewStateData Id="AddLogFields_5" sap:VirtualizedContainerService.HintSize="464,124">
<sap:WorkflowViewStateService.ViewState>
<scg:Dictionary x:TypeArguments="x:String, x:Object">
<x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
</scg:Dictionary>
</sap:WorkflowViewStateService.ViewState>
</sap2010:ViewStateData>
<sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="464,208"/>
<sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="464,91"/>
<sap2010:ViewStateData Id="Sequence_25" sap:VirtualizedContainerService.HintSize="486,684">
<sap:WorkflowViewStateService.ViewState>
<scg:Dictionary x:TypeArguments="x:String, x:Object">
<x:Boolean x:Key="IsExpanded">True</x:Boolean>
<x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
<x:Boolean x:Key="IsPinned">False</x:Boolean>
</scg:Dictionary>
</sap:WorkflowViewStateService.ViewState>
</sap2010:ViewStateData>
<sap2010:ViewStateData Id="Rethrow_1" sap:VirtualizedContainerService.HintSize="486,22"/>
<sap2010:ViewStateData Id="Sequence_26" sap:VirtualizedContainerService.HintSize="508,813">
<sap:WorkflowViewStateService.ViewState>
<scg:Dictionary x:TypeArguments="x:String, x:Object">
<x:Boolean x:Key="IsExpanded">True</x:Boolean>
</scg:Dictionary>
</sap:WorkflowViewStateService.ViewState>
</sap2010:ViewStateData>
<sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="404,21">
<sap:WorkflowViewStateService.ViewState>
<scg:Dictionary x:TypeArguments="x:String, x:Object">
<x:Boolean x:Key="IsExpanded">False</x:Boolean>
<x:Boolean x:Key="IsPinned">False</x:Boolean>
</scg:Dictionary>
</sap:WorkflowViewStateService.ViewState>
</sap2010:ViewStateData>
<sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="418,2003">
<sap:WorkflowViewStateService.ViewState>
<scg:Dictionary x:TypeArguments="x:String, x:Object">
<x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
<x:Boolean x:Key="IsExpanded">False</x:Boolean>
<x:Boolean x:Key="IsPinned">False</x:Boolean>
</scg:Dictionary>
</sap:WorkflowViewStateService.ViewState>
</sap2010:ViewStateData>
<sap2010:ViewStateData Id="wbTemplate_1" sap:VirtualizedContainerService.HintSize="458,2083"/>
</sap2010:ViewStateManager>
</sap2010:WorkflowViewState.ViewStateManager>
</Activity>